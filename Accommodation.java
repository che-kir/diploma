/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package spectrex;

import static spectrex.PatientRegistration.checkWithRegExpEmail;
import static spectrex.PatientRegistration.checkWithRegExpPass;
import static spectrex.PatientRegistration.checkWithRegExpTel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Kirill
 */
public class Accommodation extends javax.swing.JFrame {

    /**
     * Creates new form Accommodation
     */
    public int idhs = MedLogin.idhs;
    public Connection cn = MedLogin.cn;
    public Accommodation() {
        initComponents();
        java.awt.Dimension dim = getToolkit().getScreenSize();
        this.setLocation(dim.width/2 - this.getWidth()/2,
                dim.height/2 - this.getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TextFieldPostIndex = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TextFieldCountry = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TextFieldArea = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TextFieldDistrict = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        TextFieldLocality = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TextFieldStreet = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TextFieldHouse = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TextFieldFlat = new javax.swing.JTextField();
        CheckBoxAccSame = new javax.swing.JCheckBox();
        ButtonSaveFactAcc = new javax.swing.JButton();
        ButtonSaveAcc = new javax.swing.JButton();
        ButtonCancel = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("spectrex/Bundle"); // NOI18N
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("Accommodation.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(bundle.getString("Accommodation.jLabel1.text")); // NOI18N

        jLabel2.setText(bundle.getString("Accommodation.jLabel2.text")); // NOI18N

        TextFieldCountry.setText(bundle.getString("Accommodation.TextFieldCountry.text")); // NOI18N

        jLabel3.setText(bundle.getString("Accommodation.jLabel3.text")); // NOI18N

        TextFieldArea.setText(bundle.getString("Accommodation.TextFieldArea.text")); // NOI18N

        jLabel4.setText(bundle.getString("Accommodation.jLabel4.text")); // NOI18N

        jLabel5.setText(bundle.getString("Accommodation.jLabel5.text")); // NOI18N

        TextFieldLocality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldLocalityActionPerformed(evt);
            }
        });

        jLabel6.setText(bundle.getString("Accommodation.jLabel6.text")); // NOI18N

        jLabel7.setText(bundle.getString("Accommodation.jLabel7.text")); // NOI18N

        jLabel8.setText(bundle.getString("Accommodation.jLabel8.text")); // NOI18N

        CheckBoxAccSame.setText(bundle.getString("Accommodation.CheckBoxAccSame.text")); // NOI18N

        ButtonSaveFactAcc.setText(bundle.getString("Accommodation.ButtonSaveFactAcc.text")); // NOI18N
        ButtonSaveFactAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSaveFactAccActionPerformed(evt);
            }
        });

        ButtonSaveAcc.setText(bundle.getString("Accommodation.ButtonSaveAcc.text")); // NOI18N
        ButtonSaveAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSaveAccActionPerformed(evt);
            }
        });

        ButtonCancel.setText(bundle.getString("Accommodation.ButtonCancel.text")); // NOI18N
        ButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(TextFieldHouse, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextFieldStreet, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextFieldCountry, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextFieldArea, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextFieldPostIndex, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextFieldFlat)))
                    .addComponent(CheckBoxAccSame))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TextFieldLocality, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(TextFieldDistrict)))
                    .addComponent(ButtonSaveFactAcc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonCancel)
                    .addComponent(ButtonSaveAcc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TextFieldPostIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(TextFieldDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextFieldCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(TextFieldLocality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TextFieldArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TextFieldStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonSaveAcc)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(TextFieldHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSaveFactAcc))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(TextFieldFlat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CheckBoxAccSame)
                    .addComponent(ButtonCancel))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static boolean checkWithRegExpPostIndex(String index){  
        Pattern p = Pattern.compile("^\\d{5}$");  
        Matcher m = p.matcher(index);  
        return m.matches();  
    }   
    
    public static boolean checkWithRegExpFlat(String flat){  
        Pattern p = Pattern.compile("^[1-9]+[0-9]*$");  
        Matcher m = p.matcher(flat);  
        return m.matches();  
    }   
    
    public static boolean checkWithRegExpHouse(String house){  
        Pattern p = Pattern.compile("^[1-9]+[0-9]*(/|/[0-9]+)?([a-z]|[A-Z])*$");  
        Matcher m = p.matcher(house);  
        return m.matches();  
    }           
            
    private void ButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_ButtonCancelActionPerformed

    private void ButtonSaveAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSaveAccActionPerformed
         try {                                               
            Statement s = cn.createStatement();
            String indexstr, flatstr, country, area, district, locality, street, house;
            String Sql;
            Byte same = 0;
            int index = 0, flat = 0, flag = 0, idp = 1;
            indexstr = TextFieldPostIndex.getText();
            
            if(!checkWithRegExpPostIndex(indexstr) && !indexstr.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Некорректный ввод почтового индекса");
                flag = 1;
            }  
            else if(checkWithRegExpPostIndex(indexstr))
            index = Integer.parseInt(indexstr);
            country = TextFieldCountry.getText();
            area = TextFieldArea.getText();
            district = TextFieldDistrict.getText();
            locality = TextFieldLocality.getText();
            street = TextFieldStreet.getText();
            house = TextFieldHouse.getText();
            flatstr = TextFieldFlat.getText();
            
            if(TextFieldCountry.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Введите Страну");
                flag = 1;
            } 
            else if(TextFieldArea.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Введите Область");
                flag = 1;
            }
            else if(TextFieldLocality.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Введите населенный пункт");
                flag = 1;
            }
            else if(TextFieldStreet.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Введите улицу");
                flag = 1;
            }
            else if(TextFieldHouse.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Введите дом");
                flag = 1;
            }
            if(!checkWithRegExpHouse(house))
            {
                JOptionPane.showMessageDialog(null, "Некорректный ввод номера дома");
                flag = 1;
            }
            if(!checkWithRegExpFlat(flatstr) && !flatstr.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Некорректный ввод номера квартиры");
                flag = 1;
            }
            else if(checkWithRegExpFlat(flatstr))
            flat = Integer.parseInt(flatstr);
            if(CheckBoxAccSame.isSelected())
            {
                ButtonSaveFactAcc.setVisible(false);
                same = 1;
                Sql = "insert into factaccomodation (Same, PostIndex, Country, Area, District, Locality, Street, "
                    + "House, Flat, IdP) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            try {
                if(flag == 0)
                {
                PreparedStatement ps = cn.prepareStatement(Sql);
                ps.setByte(1, same);
                ps.setInt(2, index);
                ps.setString(3, country);
                ps.setString(4, area);
                ps.setString(5, district);
                ps.setString(6, locality);
                ps.setString(7, street);
                ps.setString(8, house);
                ps.setInt(9, flat);
                ps.setInt(10, idp);

                
                int n = ps.executeUpdate();
                
                if(n > 0)
                {
                    JOptionPane.showMessageDialog(null, "messagefact");
                }
                }
                
            }
             catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
            }
            else ButtonSaveFactAcc.setVisible(true);
            Sql = "insert into accommodation (PostIndex, Country, Area, District, Locality, Street, "
                    + "House, Flat, IdP) values (?, ?, ?, ?, ?, ?, ?, ?, ?)";
            try {
                if(flag == 0)
                {
                PreparedStatement ps = cn.prepareStatement(Sql);
                ps.setInt(1, index);
                ps.setString(2, country);
                ps.setString(3, area);
                ps.setString(4, district);
                ps.setString(5, locality);
                ps.setString(6, street);
                ps.setString(7, house);
                ps.setInt(8, flat);
                ps.setInt(9, idp);

                
                int n = ps.executeUpdate();
                
                if(n > 0)
                {
                    JOptionPane.showMessageDialog(null, "message");
                }
                }
                
            }
             catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE,null, ex);
        }
           ///////////////////////////
                  
            try {                                               
            Statement s = cn.createStatement();
            java.util.Date now = new java.util.Date();
            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat format2 = new SimpleDateFormat("HH:mm:ss");
            String d1 = format1.format(now);
            String t1 = format2.format(now);
            System.out.println(d1 + " " + t1);
         
            String Sql = "";
  
            Sql = "insert into journal (DateOfWork, TimeOfWork, IdHS, Enter, Quit, InputDataInTable, UseQuery) values (?, ?, ?, ?, ?, ?, ?)";
          
            try {
                PreparedStatement ps = cn.prepareStatement(Sql);
                ps.setString(1, d1);
                ps.setString(2, t1);
                ps.setInt(3, idhs);
                ps.setString(4, "0");
                ps.setString(5, "0");
                ps.setString(6, "accommodation");
                ps.setString(7, "insert into accommodation values(...)");
                
                int n = ps.executeUpdate();
                
                if(n <= 0)
                {
                    JOptionPane.showMessageDialog(null, "message_journal_BAD_QueryEntry");
                }
            }
                         catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
                    
            }      
                           catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
                           }
  
    }//GEN-LAST:event_ButtonSaveAccActionPerformed

    private void TextFieldLocalityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldLocalityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldLocalityActionPerformed

    private void ButtonSaveFactAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSaveFactAccActionPerformed
                try {                                               
            Statement s = cn.createStatement();
            String indexstr, flatstr, country, area, district, locality, street, house;
            String Sql;
            Byte same = 0;
            int index = 0, flat = 0, flag = 0, idp = 1;
            indexstr = TextFieldPostIndex.getText();
            
            if(!checkWithRegExpPostIndex(indexstr) && !indexstr.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Некорректный ввод почтового индекса");
                flag = 1;
            }  
            else if(checkWithRegExpPostIndex(indexstr))
            index = Integer.parseInt(indexstr);
            country = TextFieldCountry.getText();
            area = TextFieldArea.getText();
            district = TextFieldDistrict.getText();
            locality = TextFieldLocality.getText();
            street = TextFieldStreet.getText();
            house = TextFieldHouse.getText();
            flatstr = TextFieldFlat.getText();
            
            if(TextFieldCountry.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Введите Страну");
                flag = 1;
            } 
            else if(TextFieldArea.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Введите Область");
                flag = 1;
            }
            else if(TextFieldLocality.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Введите населенный пункт");
                flag = 1;
            }
            else if(TextFieldStreet.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Введите улицу");
                flag = 1;
            }
            else if(TextFieldHouse.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Введите дом");
                flag = 1;
            }
            
            if(!checkWithRegExpFlat(flatstr) && !flatstr.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Некорректный ввод номера квартиры");
                flag = 1;
            }
            else if(checkWithRegExpFlat(flatstr))
            flat = Integer.parseInt(flatstr);
            if(CheckBoxAccSame.isSelected())
            {
                ButtonSaveAcc.setVisible(false);
                same = 1;
                
                Sql = "insert into accommodation (PostIndex, Country, Area, District, Locality, Street, "
                    + "House, Flat, IdP) values (?, ?, ?, ?, ?, ?, ?, ?, ?)";
            try {
                if(flag == 0)
                {
                PreparedStatement ps = cn.prepareStatement(Sql);
                ps.setInt(1, index);
                ps.setString(2, country);
                ps.setString(3, area);
                ps.setString(4, district);
                ps.setString(5, locality);
                ps.setString(6, street);
                ps.setString(7, house);
                ps.setInt(8, flat);
                ps.setInt(9, idp);
               

                
                int n = ps.executeUpdate();
                
                if(n > 0)
                {
                    JOptionPane.showMessageDialog(null, "message");
                }
                }
                
            }
             catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
            }
            else ButtonSaveAcc.setVisible(true);
             Sql = "insert into factaccomodation (Same, PostIndex, Country, Area, District, Locality, Street, "
                    + "House, Flat, IdP) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            try {
                if(flag == 0)
                {
                PreparedStatement ps = cn.prepareStatement(Sql);
                ps.setByte(1, same);
                ps.setInt(2, index);
                ps.setString(3, country);
                ps.setString(4, area);
                ps.setString(5, district);
                ps.setString(6, locality);
                ps.setString(7, street);
                ps.setString(8, house);
                ps.setInt(9, flat);
                ps.setInt(10, idp);
                
                int n = ps.executeUpdate();
                
                if(n > 0)
                {
                    JOptionPane.showMessageDialog(null, "messagefact");
                }
                }
                
            }
             catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE,null, ex);
        }
        
    }//GEN-LAST:event_ButtonSaveFactAccActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accommodation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Accommodation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonCancel;
    private javax.swing.JButton ButtonSaveAcc;
    private javax.swing.JButton ButtonSaveFactAcc;
    private javax.swing.JCheckBox CheckBoxAccSame;
    private javax.swing.JTextField TextFieldArea;
    private javax.swing.JTextField TextFieldCountry;
    private javax.swing.JTextField TextFieldDistrict;
    private javax.swing.JTextField TextFieldFlat;
    private javax.swing.JTextField TextFieldHouse;
    private javax.swing.JTextField TextFieldLocality;
    private javax.swing.JTextField TextFieldPostIndex;
    private javax.swing.JTextField TextFieldStreet;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
