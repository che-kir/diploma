/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package spectrex;

import java.sql.*;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Kirill
 */


public class MedMainOld extends javax.swing.JFrame {

    /**
     * Creates new form MedMain
     */
    public Connection cn = MedLogin.cn;
    public int idhs = MedLogin.idhs;

    
    public MedMainOld() throws SQLException {
       initComponents();
       try
        {
        Statement sta = cn.createStatement();
        ResultSet rs;

            rs = sta.executeQuery("select IdHS, IdPost from hospitalstaff where IdHS =" + idhs + ";");

            if(rs.first())
            {
                if (rs.getInt("IdPost") == 2)//doctor
                {
                    ButtonMedRegistration.setEnabled(false);
                    ButtonToPatientRegistration.setEnabled(false);
                    ButtonUpdateMedWorker.setEnabled(false);
                    ButtonAddPost.setEnabled(false);
                    ButtonAddInst.setEnabled(false);
                    ButtonJournal.setEnabled(false);
                }
                else if (rs.getInt("IdPost") == 3)//laborant
                {
                    ButtonToSeans.setEnabled(false);
                    ButtonMedRegistration.setEnabled(false);
                    ButtonUpdateMedWorker.setEnabled(false);
                    ButtonAddPost.setEnabled(false);
                    ButtonJournal.setEnabled(false);
                }
                else //admin
                {
                    ButtonToSeans.setEnabled(false);
                }
             
            }
        }
            catch (SQLException ex) {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }        
        java.awt.Dimension dim = getToolkit().getScreenSize();
        this.setLocation(dim.width/2 - this.getWidth()/2,
                dim.height/2 - this.getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        ButtonSearchPatientMedCard = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        FieldFindPatientMedCard = new javax.swing.JTextField();
        FieldFindPatientFIO = new javax.swing.JTextField();
        ButtonSearchPatientFIO = new javax.swing.JButton();
        ButtonToSeans = new javax.swing.JButton();
        ButtonExit = new javax.swing.JButton();
        ButtonExtendedSearch = new javax.swing.JButton();
        ButtonJournal = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        ButtonToPatientRegistration = new javax.swing.JButton();
        ButtonMedRegistration = new javax.swing.JButton();
        ButtonUpdateMedCard = new javax.swing.JButton();
        ButtonUpdateMedWorker = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        ButtonAddInst = new javax.swing.JButton();
        ButtonAddDiagnosticGroup = new javax.swing.JButton();
        ButtonAddPost = new javax.swing.JButton();
        ButtonQueries = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("spectrex/Bundle"); // NOI18N
        ButtonSearchPatientMedCard.setText(bundle.getString("MedMainOld.ButtonSearchPatientMedCard.text")); // NOI18N
        ButtonSearchPatientMedCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSearchPatientMedCardActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("MedMainOld.jLabel1.text")); // NOI18N

        jLabel2.setText(bundle.getString("MedMainOld.jLabel2.text")); // NOI18N

        FieldFindPatientMedCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldFindPatientMedCardActionPerformed(evt);
            }
        });

        ButtonSearchPatientFIO.setText(bundle.getString("MedMainOld.ButtonSearchPatientFIO.text")); // NOI18N
        ButtonSearchPatientFIO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSearchPatientFIOActionPerformed(evt);
            }
        });

        ButtonToSeans.setText(bundle.getString("MedMainOld.ButtonToSeans.text")); // NOI18N
        ButtonToSeans.setToolTipText(bundle.getString("MedMainOld.ButtonToSeans.toolTipText")); // NOI18N
        ButtonToSeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonToSeansActionPerformed(evt);
            }
        });

        ButtonExit.setText(bundle.getString("MedMainOld.ButtonExit.text")); // NOI18N
        ButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExitActionPerformed(evt);
            }
        });

        ButtonExtendedSearch.setText(bundle.getString("MedMainOld.ButtonExtendedSearch.text")); // NOI18N
        ButtonExtendedSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExtendedSearchActionPerformed(evt);
            }
        });

        ButtonJournal.setText(bundle.getString("MedMainOld.ButtonJournal.text")); // NOI18N
        ButtonJournal.setToolTipText(bundle.getString("MedMainOld.ButtonJournal.toolTipText")); // NOI18N
        ButtonJournal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonJournalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FieldFindPatientMedCard, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FieldFindPatientFIO, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(ButtonExtendedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ButtonToSeans, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ButtonSearchPatientFIO, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonSearchPatientMedCard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonJournal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(FieldFindPatientMedCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSearchPatientMedCard))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(FieldFindPatientFIO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSearchPatientFIO))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonExtendedSearch)
                    .addComponent(ButtonJournal))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonToSeans)
                    .addComponent(ButtonExit))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("MedMainOld.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        ButtonToPatientRegistration.setText(bundle.getString("MedMainOld.ButtonToPatientRegistration.text")); // NOI18N
        ButtonToPatientRegistration.setToolTipText(bundle.getString("MedMainOld.ButtonToPatientRegistration.toolTipText")); // NOI18N
        ButtonToPatientRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonToPatientRegistrationActionPerformed(evt);
            }
        });

        ButtonMedRegistration.setText(bundle.getString("MedMainOld.ButtonMedRegistration.text")); // NOI18N
        ButtonMedRegistration.setToolTipText(bundle.getString("MedMainOld.ButtonMedRegistration.toolTipText")); // NOI18N
        ButtonMedRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMedRegistrationActionPerformed(evt);
            }
        });

        ButtonUpdateMedCard.setText(bundle.getString("MedMainOld.ButtonUpdateMedCard.text")); // NOI18N
        ButtonUpdateMedCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonUpdateMedCardActionPerformed(evt);
            }
        });

        ButtonUpdateMedWorker.setText(bundle.getString("MedMainOld.ButtonUpdateMedWorker.text")); // NOI18N
        ButtonUpdateMedWorker.setToolTipText(bundle.getString("MedMainOld.ButtonUpdateMedWorker.toolTipText")); // NOI18N
        ButtonUpdateMedWorker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonUpdateMedWorkerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ButtonUpdateMedWorker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonMedRegistration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonUpdateMedCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonToPatientRegistration, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))
                .addContainerGap(341, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(ButtonToPatientRegistration)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonUpdateMedCard)
                .addGap(40, 40, 40)
                .addComponent(ButtonMedRegistration)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonUpdateMedWorker)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("MedMainOld.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        ButtonAddInst.setText(bundle.getString("MedMainOld.ButtonAddInst.text")); // NOI18N
        ButtonAddInst.setToolTipText(bundle.getString("MedMainOld.ButtonAddInst.toolTipText")); // NOI18N
        ButtonAddInst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddInstActionPerformed(evt);
            }
        });

        ButtonAddDiagnosticGroup.setText(bundle.getString("MedMainOld.ButtonAddDiagnosticGroup.text")); // NOI18N
        ButtonAddDiagnosticGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddDiagnosticGroupActionPerformed(evt);
            }
        });

        ButtonAddPost.setText(bundle.getString("MedMainOld.ButtonAddPost.text")); // NOI18N
        ButtonAddPost.setToolTipText(bundle.getString("MedMainOld.ButtonAddPost.toolTipText")); // NOI18N
        ButtonAddPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddPostActionPerformed(evt);
            }
        });

        ButtonQueries.setText(bundle.getString("MedMainOld.ButtonQueries.text")); // NOI18N
        ButtonQueries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonQueriesActionPerformed(evt);
            }
        });

        jButton1.setText(bundle.getString("MedMainOld.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ButtonQueries, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addComponent(ButtonAddPost, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addComponent(ButtonAddInst, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonAddDiagnosticGroup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ButtonAddInst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonAddPost)
                    .addComponent(ButtonAddDiagnosticGroup))
                .addGap(59, 59, 59)
                .addComponent(ButtonQueries)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("MedMainOld.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logQuery(String strChange)
    {                     
            try {                                               
            Statement s = cn.createStatement();
            java.util.Date now = new java.util.Date();
            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat format2 = new SimpleDateFormat("HH:mm:ss");
            String d1 = format1.format(now);
            String t1 = format2.format(now);
            System.out.println(d1 + " " + t1);
         
            String Sql = "";
  
            Sql = "insert into journal (DateOfWork, TimeOfWork, IdHS, Enter, Quit, InputDataInTable, UseQuery) values (?, ?, ?, ?, ?, ?, ?)";
          
            try {
                PreparedStatement ps = cn.prepareStatement(Sql);
                ps.setString(1, d1);
                ps.setString(2, t1);
                ps.setInt(3, idhs);
                ps.setString(4, "0");
                ps.setString(5, "0");
                ps.setString(6, "-");
                ps.setString(7, strChange);
                
                int n = ps.executeUpdate();
                
                if(n <= 0)
                {
                    JOptionPane.showMessageDialog(null, "message_journal_BAD_QueryEntry");
                }
            }
                         catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
                    
            }      
                           catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
                           }
                    
    }
    
    private void ButtonQueriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonQueriesActionPerformed
        new QueryFrame().setVisible(true);
    }//GEN-LAST:event_ButtonQueriesActionPerformed

    private void ButtonExtendedSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExtendedSearchActionPerformed
        try {             
            Statement sta1 = cn.createStatement();
            ResultSet rs1;
            rs1 = sta1.executeQuery("select p.IdPost from hospitalstaff h join post p on h.IdPost = p.IdPost where h.IdHS = " + idhs);
            if(rs1.first())
            {
                if(rs1.getInt("IdPost") == 1 || rs1.getInt("IdPost") == 3)
                {
                    try {
                        Statement sta = cn.createStatement();
                        ResultSet rs;
                        rs = sta.executeQuery("select N_med_card, FIO, Gender, B_day, Tel, Passport, Acc_date, Disease, Allergy, E_mail, Inst_name, GroupName"
                         + " from ((patient p join institution i on p.IdInst = i.IdInst) join diagnosticgroup d on p.IdDG = d.IdDG)");
                        new PatientFound(rs, 5).setVisible(true);
                        }
                    catch(SQLException ex)
                    {
                        Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else
                    new PatientFound().setVisible(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MedMainOld.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonExtendedSearchActionPerformed

    private void ButtonAddPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddPostActionPerformed
        new AddPost().setVisible(true);
    }//GEN-LAST:event_ButtonAddPostActionPerformed

    private void ButtonAddDiagnosticGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddDiagnosticGroupActionPerformed
        new AddDiagnosticGroup().setVisible(true);
    }//GEN-LAST:event_ButtonAddDiagnosticGroupActionPerformed

    private void ButtonAddInstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddInstActionPerformed
        new AddInst().setVisible(true);
    }//GEN-LAST:event_ButtonAddInstActionPerformed

    private void ButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExitActionPerformed
   
            try {                                               
            Statement s = cn.createStatement();
            java.util.Date now = new java.util.Date();
            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat format2 = new SimpleDateFormat("HH:mm:ss");
            String d1 = format1.format(now);
            String t1 = format2.format(now);
            System.out.println(d1 + " " + t1);
         
            String Sql = "";
  
            Sql = "insert into journal (DateOfWork, TimeOfWork, IdHS, Enter, Quit, InputDataInTable, UseQuery) values (?, ?, ?, ?, ?, ?, ?)";
          
            try {
                PreparedStatement ps = cn.prepareStatement(Sql);
                ps.setString(1, d1);
                ps.setString(2, t1);
                ps.setInt(3, idhs);
                ps.setString(4, "0");
                ps.setString(5, "1");
                ps.setString(6, "");
                ps.setString(7, "");
                
                int n = ps.executeUpdate();
                
                if(n <= 0)
                {
                    JOptionPane.showMessageDialog(null, "message_journal_BAD_Quit");
                }
            }
                         catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
                    
            }      
                           catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
                           }
        this.dispose();
        new MedLogin().setVisible(true);
    }//GEN-LAST:event_ButtonExitActionPerformed

    private void ButtonToSeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonToSeansActionPerformed
        new Seans().setVisible(true);
    }//GEN-LAST:event_ButtonToSeansActionPerformed

    private void ButtonToPatientRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonToPatientRegistrationActionPerformed
        new PatientRegistration().setVisible(true);
    }//GEN-LAST:event_ButtonToPatientRegistrationActionPerformed

    private void ButtonSearchPatientFIOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSearchPatientFIOActionPerformed
        try {
            String fio = FieldFindPatientFIO.getText();
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select N_med_card, FIO, Gender, B_day, Tel, Passport, Acc_date, Disease, Allergy, E_mail, Inst_name, GroupName"
                    + " from (patient p join institution i on p.IdInst = i.IdInst) join diagnosticgroup d on p.IdDG = d.IdDG where FIO like '%" + fio + "%'");
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 2.2)");
    }//GEN-LAST:event_ButtonSearchPatientFIOActionPerformed

    private void ButtonSearchPatientMedCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSearchPatientMedCardActionPerformed
        try {

            String numcard = FieldFindPatientMedCard.getText();

            if(!checkWithRegExpNumber(numcard) || numcard.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Некорректный ввод номера карты");
            }
            else if(checkWithRegExpNumber(numcard))
            {
                Statement sta = cn.createStatement();
                ResultSet rs;
                rs = sta.executeQuery("select N_med_card, FIO, Gender, B_day, Tel, Passport, Acc_date, Disease, Allergy, E_mail, Inst_name, GroupName"
                    + " from (patient p join institution i on p.IdInst = i.IdInst) join diagnosticgroup d on p.IdDG = d.IdDG where N_med_card = " + numcard);
                new PatientFound(rs, 3);
            }
            
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 2.1)");
    }//GEN-LAST:event_ButtonSearchPatientMedCardActionPerformed

    private void FieldFindPatientMedCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldFindPatientMedCardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldFindPatientMedCardActionPerformed

    private void ButtonMedRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMedRegistrationActionPerformed
        new MedRegistration().setVisible(true);
    }//GEN-LAST:event_ButtonMedRegistrationActionPerformed

    private void ButtonUpdateMedCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonUpdateMedCardActionPerformed
        try
        {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select N_med_card, FIO, Gender, B_day, Tel, Passport, Acc_date, Disease, Allergy, E_mail, Inst_name, GroupName"
                         + " from ((patient p join institution i on p.IdInst = i.IdInst) join diagnosticgroup d on p.IdDG = d.IdDG)");
            new PatientFound(rs, 1);
        }
                    catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonUpdateMedCardActionPerformed

    private void ButtonJournalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonJournalActionPerformed
        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select IdJ, DateOfWork, TimeOfWork, HSFIO, Enter, Quit, InputDataInTable, UseQuery"
                    + " from journal j join hospitalstaff h on j.IdHS = h.IdHS");
            new PatientFound(rs, 3);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("view journal");
        
    }//GEN-LAST:event_ButtonJournalActionPerformed

    private void ButtonUpdateMedWorkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonUpdateMedWorkerActionPerformed
        try
        {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select IdHS, Login, HSFIO, B_day, Date_to_join, Tel, Describes, PostName, CategoryName"
                         + " from (hospitalstaff h join post p on h.IdPost = p.IdPost) join category c on h.IdCat = c.IdCat");
            new PatientFound(rs, 4);
         
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonUpdateMedWorkerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new AddCategory().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

        public static boolean checkWithRegExpNumber(String num){  
        Pattern p = Pattern.compile("^[1-9]+[0-9]*$");  
        Matcher m = p.matcher(num);  
        return m.matches();  
    }  
     
    public class StructData
    {
        public int idPatient;
        public float kvvv[] = new float[32];
        public Date dateOfSeans;
    }
    
    
    /**
     * @param args the command line arguments
     */
    /*
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         *//*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedMain().setVisible(true);
              //  new Main();
            }
        });
    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAddDiagnosticGroup;
    private javax.swing.JButton ButtonAddInst;
    private javax.swing.JButton ButtonAddPost;
    private javax.swing.JButton ButtonExit;
    private javax.swing.JButton ButtonExtendedSearch;
    private javax.swing.JButton ButtonJournal;
    private javax.swing.JButton ButtonMedRegistration;
    private javax.swing.JButton ButtonQueries;
    private javax.swing.JButton ButtonSearchPatientFIO;
    private javax.swing.JButton ButtonSearchPatientMedCard;
    private javax.swing.JButton ButtonToPatientRegistration;
    private javax.swing.JButton ButtonToSeans;
    private javax.swing.JButton ButtonUpdateMedCard;
    private javax.swing.JButton ButtonUpdateMedWorker;
    private javax.swing.JTextField FieldFindPatientFIO;
    private javax.swing.JTextField FieldFindPatientMedCard;
    private javax.swing.JButton jButton1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
