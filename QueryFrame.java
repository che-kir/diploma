/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package spectrex;

import java.io.File;
import java.net.URISyntaxException;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
////////////
import java.io.File;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.HashMap;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

public class QueryFrame extends javax.swing.JFrame {

    public int idhs = MedLogin.idhs;
    public Connection cn = MedLogin.cn;
   
    public QueryFrame() {
        initComponents();
        java.awt.Dimension dim = getToolkit().getScreenSize();
        this.setLocation(dim.width/2 - this.getWidth()/2,
                dim.height/2 - this.getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        ButtonCountPatient1 = new javax.swing.JButton();
        ButtonCountPatient2 = new javax.swing.JButton();
        ButtonReport5_2 = new javax.swing.JButton();
        ButtonReport5_1 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        ButtonSearchMeds = new javax.swing.JButton();
        ButtonGetYoungest = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        ButtonAnyPatients = new javax.swing.JButton();
        ButtonAnyDoctor = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        ButtonComment1 = new javax.swing.JButton();
        ButtonComment2 = new javax.swing.JButton();
        ButtonReport9_1 = new javax.swing.JButton();
        ButtonReport9_2 = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        dGroupField = new javax.swing.JTextField();
        buttonDGroup = new javax.swing.JButton();
        districtField = new javax.swing.JTextField();
        buttonDistrict = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        Button10Query1 = new javax.swing.JButton();
        Button10Query2 = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        ButtonBirthday = new javax.swing.JButton();
        ButtonDate = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        TextField = new javax.swing.JTextField();
        ButtonDisease = new javax.swing.JButton();
        ButtonStage = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ButtonQuery71 = new javax.swing.JButton();
        ButtonQuery72 = new javax.swing.JButton();
        ButtonReport7_1 = new javax.swing.JButton();
        ButtonReport7_2 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        ButtonBackToMain = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("spectrex/Bundle"); // NOI18N
        ButtonCountPatient1.setText(bundle.getString("QueryFrame.ButtonCountPatient1.text")); // NOI18N
        ButtonCountPatient1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCountPatient1ActionPerformed(evt);
            }
        });

        ButtonCountPatient2.setText(bundle.getString("QueryFrame.ButtonCountPatient2.text")); // NOI18N
        ButtonCountPatient2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCountPatient2ActionPerformed(evt);
            }
        });

        ButtonReport5_2.setText(bundle.getString("QueryFrame.ButtonReport5_2.text")); // NOI18N
        ButtonReport5_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonReport5_2ActionPerformed(evt);
            }
        });

        ButtonReport5_1.setText(bundle.getString("QueryFrame.ButtonReport5_1.text")); // NOI18N
        ButtonReport5_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonReport5_1ActionPerformed(evt);
            }
        });

        jLabel30.setText(bundle.getString("QueryFrame.jLabel30.text")); // NOI18N

        jLabel31.setText(bundle.getString("QueryFrame.jLabel31.text")); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(jLabel30)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(ButtonCountPatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(ButtonReport5_1))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(ButtonCountPatient2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(ButtonReport5_2)))
                .addContainerGap(267, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonCountPatient1)
                    .addComponent(ButtonReport5_1))
                .addGap(29, 29, 29)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonCountPatient2)
                    .addComponent(ButtonReport5_2))
                .addContainerGap(162, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("QueryFrame.jPanel6.TabConstraints.tabTitle"), jPanel6); // NOI18N

        ButtonSearchMeds.setText(bundle.getString("QueryFrame.ButtonSearchMeds.text")); // NOI18N
        ButtonSearchMeds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSearchMedsActionPerformed(evt);
            }
        });

        ButtonGetYoungest.setText(bundle.getString("QueryFrame.ButtonGetYoungest.text")); // NOI18N
        ButtonGetYoungest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGetYoungestActionPerformed(evt);
            }
        });

        jLabel32.setText(bundle.getString("QueryFrame.jLabel32.text")); // NOI18N

        jLabel33.setText(bundle.getString("QueryFrame.jLabel33.text")); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(jLabel32)
                    .addComponent(ButtonGetYoungest)
                    .addComponent(ButtonSearchMeds))
                .addContainerGap(234, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel32)
                .addGap(18, 18, 18)
                .addComponent(ButtonSearchMeds)
                .addGap(29, 29, 29)
                .addComponent(jLabel33)
                .addGap(18, 18, 18)
                .addComponent(ButtonGetYoungest)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("QueryFrame.jPanel7.TabConstraints.tabTitle"), jPanel7); // NOI18N

        ButtonAnyPatients.setText(bundle.getString("QueryFrame.ButtonAnyPatients.text")); // NOI18N
        ButtonAnyPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAnyPatientsActionPerformed(evt);
            }
        });

        ButtonAnyDoctor.setText(bundle.getString("QueryFrame.ButtonAnyDoctor.text")); // NOI18N
        ButtonAnyDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAnyDoctorActionPerformed(evt);
            }
        });

        jLabel38.setText(bundle.getString("QueryFrame.jLabel38.text")); // NOI18N

        jLabel39.setText(bundle.getString("QueryFrame.jLabel39.text")); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39)
                    .addComponent(jLabel38)
                    .addComponent(ButtonAnyDoctor)
                    .addComponent(ButtonAnyPatients))
                .addContainerGap(346, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonAnyPatients)
                .addGap(28, 28, 28)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonAnyDoctor)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("QueryFrame.jPanel8.TabConstraints.tabTitle"), jPanel8); // NOI18N

        ButtonComment1.setText(bundle.getString("QueryFrame.ButtonComment1.text")); // NOI18N
        ButtonComment1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonComment1ActionPerformed(evt);
            }
        });

        ButtonComment2.setText(bundle.getString("QueryFrame.ButtonComment2.text")); // NOI18N
        ButtonComment2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonComment2ActionPerformed(evt);
            }
        });

        ButtonReport9_1.setText(bundle.getString("QueryFrame.ButtonReport9_1.text")); // NOI18N
        ButtonReport9_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonReport9_1ActionPerformed(evt);
            }
        });

        ButtonReport9_2.setText(bundle.getString("QueryFrame.ButtonReport9_2.text")); // NOI18N
        ButtonReport9_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonReport9_2ActionPerformed(evt);
            }
        });

        jLabel40.setText(bundle.getString("QueryFrame.jLabel40.text")); // NOI18N

        jLabel41.setText(bundle.getString("QueryFrame.jLabel41.text")); // NOI18N

        jLabel42.setText(bundle.getString("QueryFrame.jLabel42.text")); // NOI18N

        jLabel43.setText(bundle.getString("QueryFrame.jLabel43.text")); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addComponent(jLabel42)
                    .addComponent(jLabel41)
                    .addComponent(jLabel40)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(ButtonComment1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(ButtonReport9_1))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(ButtonComment2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(ButtonReport9_2)))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonComment1)
                    .addComponent(ButtonReport9_1))
                .addGap(18, 18, 18)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel41)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonComment2)
                    .addComponent(ButtonReport9_2))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("QueryFrame.jPanel9.TabConstraints.tabTitle"), jPanel9); // NOI18N

        dGroupField.setText(bundle.getString("QueryFrame.dGroupField.text")); // NOI18N
        dGroupField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dGroupFieldActionPerformed(evt);
            }
        });

        buttonDGroup.setText(bundle.getString("QueryFrame.buttonDGroup.text")); // NOI18N
        buttonDGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDGroupActionPerformed(evt);
            }
        });

        districtField.setText(bundle.getString("QueryFrame.districtField.text")); // NOI18N
        districtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                districtFieldActionPerformed(evt);
            }
        });

        buttonDistrict.setText(bundle.getString("QueryFrame.buttonDistrict.text")); // NOI18N
        buttonDistrict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDistrictActionPerformed(evt);
            }
        });

        jLabel47.setText(bundle.getString("QueryFrame.jLabel47.text")); // NOI18N

        jLabel48.setText(bundle.getString("QueryFrame.jLabel48.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel47)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(districtField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(buttonDistrict))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(dGroupField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(45, 45, 45)
                            .addComponent(buttonDGroup))))
                .addContainerGap(306, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(districtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDistrict))
                .addGap(18, 18, 18)
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dGroupField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDGroup))
                .addGap(171, 171, 171))
        );

        jTabbedPane1.addTab(bundle.getString("QueryFrame.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        Button10Query1.setText(bundle.getString("QueryFrame.Button10Query1.text")); // NOI18N
        Button10Query1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button10Query1ActionPerformed(evt);
            }
        });

        Button10Query2.setText(bundle.getString("QueryFrame.Button10Query2.text")); // NOI18N
        Button10Query2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button10Query2ActionPerformed(evt);
            }
        });

        jLabel44.setText(bundle.getString("QueryFrame.jLabel44.text")); // NOI18N

        jLabel45.setText(bundle.getString("QueryFrame.jLabel45.text")); // NOI18N

        jLabel46.setText(bundle.getString("QueryFrame.jLabel46.text")); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Button10Query2)
                    .addComponent(jLabel45)
                    .addComponent(jLabel44)
                    .addComponent(Button10Query1)
                    .addComponent(jLabel46))
                .addContainerGap(244, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel45)
                .addGap(11, 11, 11)
                .addComponent(Button10Query1)
                .addGap(18, 18, 18)
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Button10Query2)
                .addContainerGap(157, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("QueryFrame.jPanel10.TabConstraints.tabTitle"), jPanel10); // NOI18N

        jLabel4.setText(bundle.getString("QueryFrame.jLabel4.text")); // NOI18N

        jLabel5.setText(bundle.getString("QueryFrame.jLabel5.text")); // NOI18N

        ButtonBirthday.setText(bundle.getString("QueryFrame.ButtonBirthday.text")); // NOI18N
        ButtonBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBirthdayActionPerformed(evt);
            }
        });

        ButtonDate.setText(bundle.getString("QueryFrame.ButtonDate.text")); // NOI18N
        ButtonDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDateActionPerformed(evt);
            }
        });

        jLabel26.setText(bundle.getString("QueryFrame.jLabel26.text")); // NOI18N

        jLabel27.setText(bundle.getString("QueryFrame.jLabel27.text")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26)
                    .addComponent(ButtonDate)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(20, 20, 20)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonBirthday))
                .addContainerGap(339, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonBirthday)
                .addGap(32, 32, 32)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonDate)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("QueryFrame.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        TextField.setText(bundle.getString("QueryFrame.TextField.text")); // NOI18N
        TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldActionPerformed(evt);
            }
        });

        ButtonDisease.setText(bundle.getString("QueryFrame.ButtonDisease.text")); // NOI18N
        ButtonDisease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDiseaseActionPerformed(evt);
            }
        });

        ButtonStage.setText(bundle.getString("QueryFrame.ButtonStage.text")); // NOI18N
        ButtonStage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonStageActionPerformed(evt);
            }
        });

        jLabel28.setText(bundle.getString("QueryFrame.jLabel28.text")); // NOI18N

        jLabel29.setText(bundle.getString("QueryFrame.jLabel29.text")); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(jLabel28)
                    .addComponent(ButtonStage)
                    .addComponent(ButtonDisease)
                    .addComponent(TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(256, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonDisease)
                .addGap(28, 28, 28)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonStage)
                .addContainerGap(144, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("QueryFrame.jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        ButtonQuery71.setText(bundle.getString("QueryFrame.ButtonQuery71.text")); // NOI18N
        ButtonQuery71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonQuery71ActionPerformed(evt);
            }
        });

        ButtonQuery72.setText(bundle.getString("QueryFrame.ButtonQuery72.text")); // NOI18N
        ButtonQuery72.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonQuery72ActionPerformed(evt);
            }
        });

        ButtonReport7_1.setText(bundle.getString("QueryFrame.ButtonReport7_1.text")); // NOI18N
        ButtonReport7_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonReport7_1ActionPerformed(evt);
            }
        });

        ButtonReport7_2.setText(bundle.getString("QueryFrame.ButtonReport7_2.text")); // NOI18N
        ButtonReport7_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonReport7_2ActionPerformed(evt);
            }
        });

        jLabel34.setText(bundle.getString("QueryFrame.jLabel34.text")); // NOI18N

        jLabel35.setText(bundle.getString("QueryFrame.jLabel35.text")); // NOI18N

        jLabel36.setText(bundle.getString("QueryFrame.jLabel36.text")); // NOI18N

        jLabel37.setText(bundle.getString("QueryFrame.jLabel37.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(jLabel36)
                    .addComponent(jLabel35)
                    .addComponent(jLabel34)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(ButtonQuery72)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonReport7_2))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(ButtonQuery71)
                            .addGap(62, 62, 62)
                            .addComponent(ButtonReport7_1))))
                .addContainerGap(306, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel35)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonQuery71)
                    .addComponent(ButtonReport7_1))
                .addGap(36, 36, 36)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonQuery72)
                    .addComponent(ButtonReport7_2))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("QueryFrame.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        ButtonBackToMain.setText(bundle.getString("QueryFrame.ButtonBackToMain.text")); // NOI18N
        ButtonBackToMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBackToMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ButtonBackToMain, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonBackToMain)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logQuery(String strChange)
    {                     
            try {                                               
            Statement s = cn.createStatement();
            java.util.Date now = new java.util.Date();
            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat format2 = new SimpleDateFormat("HH:mm:ss");
            String d1 = format1.format(now);
            String t1 = format2.format(now);
            System.out.println(d1 + " " + t1);
         
            String Sql = "";
  
            Sql = "insert into journal (DateOfWork, TimeOfWork, IdHS, Enter, Quit, InputDataInTable, UseQuery) values (?, ?, ?, ?, ?, ?, ?)";
          
            try {
                PreparedStatement ps = cn.prepareStatement(Sql);
                ps.setString(1, d1);
                ps.setString(2, t1);
                ps.setInt(3, idhs);
                ps.setString(4, "0");
                ps.setString(5, "0");
                ps.setString(6, "-");
                ps.setString(7, strChange);
                
                int n = ps.executeUpdate();
                
                if(n <= 0)
                {
                    JOptionPane.showMessageDialog(null, "message_journal_BAD_QueryEntry");
                }
            }
                         catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
                    
            }      
                           catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
                           }
                    
    }
    
    private void dGroupFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dGroupFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dGroupFieldActionPerformed

    private void districtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_districtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_districtFieldActionPerformed

    private void buttonDistrictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDistrictActionPerformed
 
        try {
            String district = districtField.getText();
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select fio from (patient p join factaccomodation f on "
                    + "p.`IdP` = f.`IdP`) where District = '" + district + "'");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 1.1)");
    }//GEN-LAST:event_buttonDistrictActionPerformed

    private void buttonDGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDGroupActionPerformed
 
        try {
            String dGroup = dGroupField.getText();
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select fio from (patient p join diagnosticgroup d on "
                    + "p.`IdDG` = d.`IdDG`) where GroupName = '"+ dGroup +"'");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 1.2)");    
    }//GEN-LAST:event_buttonDGroupActionPerformed

    private void ButtonBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBirthdayActionPerformed
  
           SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            
            String date1str = format.format(jDateChooser1.getDate());
            String date2str = format.format(jDateChooser2.getDate());
            try {
                Statement sta = cn.createStatement();
                ResultSet rs;
                rs = sta.executeQuery("select fio from patient where B_day between '" + date1str + "' and '" + date2str + "'");
                this.dispose();
                new PatientFound(rs);
            }
            catch(SQLException ex)
            {
                Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }
            logQuery("select (query 3.1)");
    }//GEN-LAST:event_ButtonBirthdayActionPerformed

    private void ButtonDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDateActionPerformed

           SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            
            String date1str = format.format(jDateChooser1.getDate());
            String date2str = format.format(jDateChooser2.getDate());
            try {
                Statement sta = cn.createStatement();
                ResultSet rs;
                rs = sta.executeQuery("select fio from patient where Acc_date between '" + date1str + "' and '" + date2str + "'");
                this.dispose();
                new PatientFound(rs);
            }
            catch(SQLException ex)
            {
                Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }
            logQuery("select (query 3.2)");
    }//GEN-LAST:event_ButtonDateActionPerformed

    private void TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldActionPerformed

    private void ButtonDiseaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDiseaseActionPerformed
 
        try {
            String text = TextField.getText();
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select count(`IdP`)\n" +
"from seans s where s.`Diagnosis` = '" + text + "' and month(s.`Session_date`) =  month(current_date)-1 and year(s.`Session_date`) = year(current_date)");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 4.1)");
    }//GEN-LAST:event_ButtonDiseaseActionPerformed

    private void ButtonStageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonStageActionPerformed
 
        try {
            String text = TextField.getText();
            Statement sta = cn.createStatement();
            ResultSet rs;
  
            rs = sta.executeQuery("select count(`IdHS`)\n" +
"from hospitalstaff h where h.`IdPost` = 2 and year(current_date) - year(h.`Date_to_join`) >= '" + text + "'");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 4.2)");
    }//GEN-LAST:event_ButtonStageActionPerformed

    private void ButtonCountPatient1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCountPatient1ActionPerformed
 
        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select HSFIO, count(distinct (s.`IdP`))\n" +
"from (seans s join hospitalstaff h on s.`IdHS` = h.`IdHS`) where h.`IdPost` = 2 group by h.`IdHS`, HSFIO");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 5.1)");
    }//GEN-LAST:event_ButtonCountPatient1ActionPerformed

    private void ButtonCountPatient2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCountPatient2ActionPerformed
 
        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select Inst_name, count(`IdP`)\n" +
"from (patient p join institution i on p.`IdInst` = i.`IdInst`) group by p.`IdInst`");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 5.2)");
    }//GEN-LAST:event_ButtonCountPatient2ActionPerformed

    private void ButtonSearchMedsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSearchMedsActionPerformed
 
        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select HSFIO, CategoryName\n" +
                    "from hospitalstaff h join category c on h.IdCat = c.IdCat where B_day <= All \n" +
                    "(select B_day from hospitalstaff a where h.IdCat = a.IdCat)");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 6.1)");
    }//GEN-LAST:event_ButtonSearchMedsActionPerformed

    private void ButtonGetYoungestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGetYoungestActionPerformed
  
        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select FIO\n" + "from patient h where B_day >= All\n" +
                    "(select B_day from patient)");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 6.2)");
    }//GEN-LAST:event_ButtonGetYoungestActionPerformed

    private void ButtonAnyPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAnyPatientsActionPerformed

        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select FIO from patient p left join seans s on p.IdP = s.IdP where IdS is null");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 8.1)");
    }//GEN-LAST:event_ButtonAnyPatientsActionPerformed

    private void ButtonAnyDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAnyDoctorActionPerformed
 
        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select HSFIO from hospitalstaff h left join (select * from seans s\n" +
                    "where month(s.Session_date) = month(current_date) and year(s.Session_date) = year(current_date)) a \n" +
                    "on h.IdHS = a.IdHS where a.IdHS is null and h.IdPost = 2");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 8.2)");
    }//GEN-LAST:event_ButtonAnyDoctorActionPerformed

    private void ButtonComment1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonComment1ActionPerformed

        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select HSFIO, 'имеет наибольшее количество больных'\n" +
                    "from hospitalstaff h, seans s where h.IdHS = s.IdHS group by h.IdHS, HSFIO\n" +
                    "having count(*) >= all \n" +
                    "(select count(*) from seans group by IdHS)\n" +
                    "union select HSFIO, 'не имеет больных'\n" +
                    "from hospitalstaff where IdHS not in \n" +
                    "(select IdHS from seans)");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 9.1)");
    }//GEN-LAST:event_ButtonComment1ActionPerformed

    private void ButtonComment2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonComment2ActionPerformed
 
        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select FIO, 'имеет наибольшее количество сеансов'\n" +
                    "from patient p, seans s where p.IdP = s.IdP group by p.IdP, FIO\n" +
                    "having count(*) >= all \n" +
                    "(select count(*) from seans group by IdP)\n" +
                    "union select FIO, 'не проходил обследование ещё'\n" +
                    "from patient where IdP not in \n" +
                    "(select IdP from seans)");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 9.2)");
    }//GEN-LAST:event_ButtonComment2ActionPerformed

    private void ButtonBackToMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBackToMainActionPerformed
        this.dispose();
    }//GEN-LAST:event_ButtonBackToMainActionPerformed

    private void ButtonQuery71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonQuery71ActionPerformed

        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select CategoryName, HSFIO, count(distinct(s.`IdP`))\n" +
                    "from (hospitalstaff h join seans s on h.`IdHS` = s.`IdHS`) join category c on h.IdCat = c.IdCat \n" +
                    "having count(*) >= all \n" +
                    "(select count(*)\n" +
                    "from (hospitalstaff h join seans s on h.`IdHS` = s.`IdHS`) join category c on h.IdCat = c.IdCat)");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 7.1)");
    }//GEN-LAST:event_ButtonQuery71ActionPerformed

    private void ButtonQuery72ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonQuery72ActionPerformed

        try {
            Statement sta = cn.createStatement();
            ResultSet rs;
            rs = sta.executeQuery("select Gender, count(p.`IdP`), GroupName\n" +
                    "from patient p join diagnosticgroup d on p.`IdDG` = d.`IdDG` where Gender = 'M'\n" +
                    "group by GroupName\n" +
                    "having count(p.`IdP`) >= all\n" +
                    "(select count(p.`IdP`)\n" +
                    "from patient p join diagnosticgroup d on p.`IdDG` = d.`IdDG` where Gender = 'M' group by GroupName)\n" +
                    "union\n" +
                    "select Gender, count(p.`IdP`), GroupName\n" +
                    "from patient p join diagnosticgroup d on p.`IdDG` = d.`IdDG` where Gender = 'F'\n" +
                    "group by GroupName\n" +
                    "having count(p.`IdP`) >= all\n" +
                    "(select count(p.`IdP`)\n" +
                    "from patient p join diagnosticgroup d on p.`IdDG` = d.`IdDG` where Gender = 'F' group by GroupName)");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("select (query 7.2)");
    }//GEN-LAST:event_ButtonQuery72ActionPerformed

    private void ButtonReport5_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonReport5_2ActionPerformed
             try {

    String jasperReport;
    jasperReport = "spectrex/report5_2.jasper";
    InputStream is = this.getClass().getClassLoader().getResourceAsStream(jasperReport);
    JasperPrint jasperPrint = JasperFillManager.fillReport(is, null, cn);
             /*      HashMap<String, Object> params = new HashMap<String, Object>();
            params.put("wood", ClassLoader.getSystemResource("wood.jpg").getPath());*/
   // HashMap<String, Object> params = new HashMap<String, Object>();
  //  params.put("wood", ClassLoader.getSystemResourceAsStream("src/formas/wood.jpg"));
    JasperViewer jv = new JasperViewer(jasperPrint);
    JDialog viewer = new JDialog(this, "Report", true);
    viewer.setBounds(jv.getBounds());
    viewer.getContentPane().add(jv.getContentPane());
    viewer.setResizable(true);
    viewer.setIconImage(jv.getIconImage());
    viewer.setVisible(true);
    logQuery("create report (5_2)");
} catch (JRException exc) {
   System.out.println(exc.getMessage());
} 
           catch (NullPointerException exc) {
   System.out.println(exc.getMessage());
} 
    }//GEN-LAST:event_ButtonReport5_2ActionPerformed

    private void Button10Query1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button10Query1ActionPerformed
         try {
             PreparedStatement sta1 = cn.prepareStatement("update hospitalstaff set Describes = ''");
            int n = sta1.executeUpdate();
             if(n <= 0)
                {
                    JOptionPane.showMessageDialog(null, "Error with update");
                }
            PreparedStatement sta = cn.prepareStatement("update hospitalstaff set Describes = "
                    + "'Продиагностировал наибольшее количество пациентов'\n" +
                    "where IdHS =\n" + "(\n" + "   select IdHS from \n" + "   (\n" + "   select h.IdHS\n" +
                    "   from hospitalstaff h join seans s on h.`IdHS` = s.`IdHS` \n" +
                    "   having count(*) >= all \n" +"     (\n" + "      select count(*)\n" +
                    "      from hospitalstaff z join seans s on z.`IdHS` = s.`IdHS`\n" +"     )\n" +
                    "   ) \n" + "as tmp\n" + ")");
            n = sta.executeUpdate();
             if(n <= 0)
                {
                    JOptionPane.showMessageDialog(null, "Error with update");
                }        
            Statement st = cn.createStatement();
            ResultSet rs;
            rs = st.executeQuery("SELECT HSFIO, Describes FROM hospitalstaff");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
         logQuery("update hospitalstaff (query 10.1)");
    }//GEN-LAST:event_Button10Query1ActionPerformed

    private void Button10Query2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button10Query2ActionPerformed
                try {
            PreparedStatement sta = cn.prepareStatement("update patient a set a.Disease = 'не присутствовал"
                    + "ни на одном сеансе'\n" + "where IdP in (select IdP from\n" +
                    "(select p.IdP from patient p where p.IdP not in (select IdP from seans)) as tmp)");
            int n = sta.executeUpdate();
             if(n <= 0)
                {
                    JOptionPane.showMessageDialog(null, "Error with update");
                }        
            Statement st = cn.createStatement();
            ResultSet rs;
            rs = st.executeQuery("SELECT FIO, Disease FROM patient");
            this.dispose();
            new PatientFound(rs);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(PatientRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        logQuery("update patient (query 10.2)");
    }//GEN-LAST:event_Button10Query2ActionPerformed

    private void ButtonReport5_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonReport5_1ActionPerformed
           try {

    String jasperReport;
    jasperReport = "spectrex/report5_11.jasper";
    InputStream is = this.getClass().getClassLoader().getResourceAsStream(jasperReport);
    JasperPrint jasperPrint = JasperFillManager.fillReport(is, null, cn);
             /*      HashMap<String, Object> params = new HashMap<String, Object>();
            params.put("wood", ClassLoader.getSystemResource("wood.jpg").getPath());*/
   // HashMap<String, Object> params = new HashMap<String, Object>();
  //  params.put("wood", ClassLoader.getSystemResourceAsStream("src/formas/wood.jpg"));
    JasperViewer jv = new JasperViewer(jasperPrint);
    JDialog viewer = new JDialog(this, "Report", true);
    viewer.setBounds(jv.getBounds());
    viewer.getContentPane().add(jv.getContentPane());
    viewer.setResizable(true);
    viewer.setIconImage(jv.getIconImage());
    viewer.setVisible(true);
    logQuery("create report (5_1)");
} catch (JRException exc) {
   System.out.println(exc.getMessage());
} 
           catch (NullPointerException exc) {
   System.out.println(exc.getMessage());
} 
    }//GEN-LAST:event_ButtonReport5_1ActionPerformed

    private void ButtonReport7_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonReport7_1ActionPerformed
              try {

    String jasperReport;
    jasperReport = "spectrex/report_7_1_1.jasper";
    InputStream is = this.getClass().getClassLoader().getResourceAsStream(jasperReport);
    JasperPrint jasperPrint = JasperFillManager.fillReport(is, null, cn);
             /*      HashMap<String, Object> params = new HashMap<String, Object>();
            params.put("wood", ClassLoader.getSystemResource("wood.jpg").getPath());*/
   // HashMap<String, Object> params = new HashMap<String, Object>();
  //  params.put("wood", ClassLoader.getSystemResourceAsStream("src/formas/wood.jpg"));
    JasperViewer jv = new JasperViewer(jasperPrint);
    JDialog viewer = new JDialog(this, "Report", true);
    viewer.setBounds(jv.getBounds());
    viewer.getContentPane().add(jv.getContentPane());
    viewer.setResizable(true);
    viewer.setIconImage(jv.getIconImage());
    viewer.setVisible(true);
    logQuery("create report (7_1)");
} catch (JRException exc) {
   System.out.println(exc.getMessage());
} 
           catch (NullPointerException exc) {
   System.out.println(exc.getMessage());
} 
    }//GEN-LAST:event_ButtonReport7_1ActionPerformed

    private void ButtonReport7_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonReport7_2ActionPerformed
              try {

    String jasperReport;
    jasperReport = "spectrex/report7_2.jasper";
    InputStream is = this.getClass().getClassLoader().getResourceAsStream(jasperReport);
    JasperPrint jasperPrint = JasperFillManager.fillReport(is, null, cn);
             /*      HashMap<String, Object> params = new HashMap<String, Object>();
            params.put("wood", ClassLoader.getSystemResource("wood.jpg").getPath());*/
   // HashMap<String, Object> params = new HashMap<String, Object>();
  //  params.put("wood", ClassLoader.getSystemResourceAsStream("src/formas/wood.jpg"));
    JasperViewer jv = new JasperViewer(jasperPrint);
    JDialog viewer = new JDialog(this, "Report", true);
    viewer.setBounds(jv.getBounds());
    viewer.getContentPane().add(jv.getContentPane());
    viewer.setResizable(true);
    viewer.setIconImage(jv.getIconImage());
    viewer.setVisible(true);
    logQuery("create report (7_2)");
} catch (JRException exc) {
   System.out.println(exc.getMessage());
} 
           catch (NullPointerException exc) {
   System.out.println(exc.getMessage());
} 
    }//GEN-LAST:event_ButtonReport7_2ActionPerformed

    private void ButtonReport9_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonReport9_1ActionPerformed
               try {

    String jasperReport;
    jasperReport = "spectrex/report9_1.jasper";
    InputStream is = this.getClass().getClassLoader().getResourceAsStream(jasperReport);
    JasperPrint jasperPrint = JasperFillManager.fillReport(is, null, cn);
             /*      HashMap<String, Object> params = new HashMap<String, Object>();
            params.put("wood", ClassLoader.getSystemResource("wood.jpg").getPath());*/
   // HashMap<String, Object> params = new HashMap<String, Object>();
  //  params.put("wood", ClassLoader.getSystemResourceAsStream("src/formas/wood.jpg"));
    JasperViewer jv = new JasperViewer(jasperPrint);
    JDialog viewer = new JDialog(this, "Report", true);
    viewer.setBounds(jv.getBounds());
    viewer.getContentPane().add(jv.getContentPane());
    viewer.setResizable(true);
    viewer.setIconImage(jv.getIconImage());
    viewer.setVisible(true);
    logQuery("create report (9_1)");
} catch (JRException exc) {
   System.out.println(exc.getMessage());
} 
           catch (NullPointerException exc) {
   System.out.println(exc.getMessage());
} 
    }//GEN-LAST:event_ButtonReport9_1ActionPerformed

    private void ButtonReport9_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonReport9_2ActionPerformed
               try {

    String jasperReport;
    jasperReport = "spectrex/report9_2.jasper";
    InputStream is = this.getClass().getClassLoader().getResourceAsStream(jasperReport);
    JasperPrint jasperPrint = JasperFillManager.fillReport(is, null, cn);
             /*      HashMap<String, Object> params = new HashMap<String, Object>();
            params.put("wood", ClassLoader.getSystemResource("wood.jpg").getPath());*/
   // HashMap<String, Object> params = new HashMap<String, Object>();
  //  params.put("wood", ClassLoader.getSystemResourceAsStream("src/formas/wood.jpg"));
    JasperViewer jv = new JasperViewer(jasperPrint);
    JDialog viewer = new JDialog(this, "Report", true);
    viewer.setBounds(jv.getBounds());
    viewer.getContentPane().add(jv.getContentPane());
    viewer.setResizable(true);
    viewer.setIconImage(jv.getIconImage());
    viewer.setVisible(true);
    logQuery("create report (9_2)");
} catch (JRException exc) {
   System.out.println(exc.getMessage());
} 
           catch (NullPointerException exc) {
   System.out.println(exc.getMessage());
} 
    }//GEN-LAST:event_ButtonReport9_2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QueryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QueryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QueryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QueryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QueryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button10Query1;
    private javax.swing.JButton Button10Query2;
    private javax.swing.JButton ButtonAnyDoctor;
    private javax.swing.JButton ButtonAnyPatients;
    private javax.swing.JButton ButtonBackToMain;
    private javax.swing.JButton ButtonBirthday;
    private javax.swing.JButton ButtonComment1;
    private javax.swing.JButton ButtonComment2;
    private javax.swing.JButton ButtonCountPatient1;
    private javax.swing.JButton ButtonCountPatient2;
    private javax.swing.JButton ButtonDate;
    private javax.swing.JButton ButtonDisease;
    private javax.swing.JButton ButtonGetYoungest;
    private javax.swing.JButton ButtonQuery71;
    private javax.swing.JButton ButtonQuery72;
    private javax.swing.JButton ButtonReport5_1;
    private javax.swing.JButton ButtonReport5_2;
    private javax.swing.JButton ButtonReport7_1;
    private javax.swing.JButton ButtonReport7_2;
    private javax.swing.JButton ButtonReport9_1;
    private javax.swing.JButton ButtonReport9_2;
    private javax.swing.JButton ButtonSearchMeds;
    private javax.swing.JButton ButtonStage;
    private javax.swing.JTextField TextField;
    private javax.swing.JButton buttonDGroup;
    private javax.swing.JButton buttonDistrict;
    private javax.swing.JTextField dGroupField;
    private javax.swing.JTextField districtField;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
