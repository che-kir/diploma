/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package spectrex;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Kirill
 */
public class MedLogin extends javax.swing.JFrame {

    /**
     * Creates new form MedLogin
     */
    public static int idhs;
    public static int idpost;
    public static Connection cn;
 
    public MedLogin() {
        initComponents();
        java.awt.Dimension dim = getToolkit().getScreenSize();
        this.setLocation(dim.width/2 - this.getWidth()/2,
                dim.height/2 - this.getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        LabelLogin = new javax.swing.JLabel();
        FieldLogin = new javax.swing.JTextField();
        LabelPassword = new javax.swing.JLabel();
        FieldPassword = new javax.swing.JPasswordField();
        ButtonEnter = new javax.swing.JButton();
        LabelDBPassword = new javax.swing.JLabel();
        FieldDBPass = new javax.swing.JPasswordField();

        jCheckBoxMenuItem1.setSelected(true);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("spectrex/Bundle"); // NOI18N
        jCheckBoxMenuItem1.setText(bundle.getString("MedLogin.jCheckBoxMenuItem1.text")); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MedLogin.jPanel1.border.title"))); // NOI18N
        jPanel1.setFocusable(false);

        LabelLogin.setText(bundle.getString("MedLogin.LabelLogin.text")); // NOI18N

        FieldLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldLoginActionPerformed(evt);
            }
        });

        LabelPassword.setText(bundle.getString("MedLogin.LabelPassword.text")); // NOI18N

        FieldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldPasswordActionPerformed(evt);
            }
        });
        FieldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FieldPasswordKeyPressed(evt);
            }
        });

        ButtonEnter.setText(bundle.getString("MedLogin.ButtonEnter.text")); // NOI18N
        ButtonEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEnterActionPerformed(evt);
            }
        });
        ButtonEnter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ButtonEnterKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ButtonEnterKeyTyped(evt);
            }
        });

        LabelDBPassword.setText(bundle.getString("MedLogin.LabelDBPassword.text")); // NOI18N

        FieldDBPass.setText(bundle.getString("MedLogin.FieldDBPass.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ButtonEnter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(LabelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FieldPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FieldLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(LabelDBPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(FieldDBPass, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelLogin)
                    .addComponent(FieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelPassword)
                    .addComponent(FieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelDBPassword)
                    .addComponent(FieldDBPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ButtonEnter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEnterActionPerformed

            String log, pas;
            //int idhs;
            log = FieldLogin.getText();
            pas = FieldPassword.getText();
             try
            {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/patients2", "root", FieldDBPass.getText());
            Statement sta = cn.createStatement();
            ResultSet rs;

            rs = sta.executeQuery("select IdHS, Login, Pass, IdPost from hospitalstaff where Login ='" + log + "';");

            if(!rs.first())
            JOptionPane.showMessageDialog(null, "Неверный логин");
            else {
            if (log.equals(rs.getString("Login"))) {
            if (pas.equals(rs.getString("Pass"))) {
            idhs = rs.getInt("IdHS");
            idpost = rs.getInt("IdPost");           
            try {                                               
            Statement s = cn.createStatement();
            Date now = new Date();
            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat format2 = new SimpleDateFormat("HH:mm:ss");
            String d1 = format1.format(now);
            String t1 = format2.format(now);
            System.out.println(d1 + " " + t1);
         
            String Sql = "";
  
            Sql = "insert into journal (DateOfWork, TimeOfWork, IdHS, Enter, Quit, InputDataInTable, UseQuery) values (?, ?, ?, ?, ?, ?, ?)";
          
            try {
            PreparedStatement ps = cn.prepareStatement(Sql);
            ps.setString(1, d1);
            ps.setString(2, t1);
            ps.setInt(3, idhs);
            ps.setString(4, "1");
            ps.setString(5, "0");
            ps.setString(6, "");
            ps.setString(7, "");
            
            int n = ps.executeUpdate();
            
            if(n <= 0)
            {
            JOptionPane.showMessageDialog(null, "message_journal_BAD_Enter");
            }
            }
            catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
            
            }
            catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
                if (idpost == 2)
              {
                new DoctorMain().setVisible(true);
              }
                else if (idpost == 3)
              {
                new OperatorMain().setVisible(true);
              }
                else
              {
                new AdminMain().setVisible(true);
              }
            
                this.dispose();
            }
            else 
            {
                JOptionPane.showMessageDialog(null, "Неверная комбинация логин - пароль.");
            }
            } else {
            JOptionPane.showMessageDialog(null, "Неверный логин");
            }
            }
            }
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ошибка подключения к базе данных: неверный пароль1");
            }      
    }//GEN-LAST:event_ButtonEnterActionPerformed

    private void FieldLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldLoginActionPerformed

    private void FieldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldPasswordActionPerformed

    private void ButtonEnterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ButtonEnterKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            String log, pas;
            log = FieldLogin.getText();
            pas = FieldPassword.getText();
             try
            {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/patients2", "root", FieldDBPass.getText());
            Statement sta = cn.createStatement();
            ResultSet rs;

            rs = sta.executeQuery("select IdHS, Login, Pass, IdPost from hospitalstaff where Login ='" + log + "';");

            if(!rs.first())
            JOptionPane.showMessageDialog(null, "Неверный логин");
            else {
            if (log.equals(rs.getString("Login"))) {
            if (pas.equals(rs.getString("Pass"))) {
            idhs = rs.getInt("IdHS");
            idpost = rs.getInt("IdPost");
            
            try {                                               
            Statement s = cn.createStatement();
            Date now = new Date();
            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat format2 = new SimpleDateFormat("HH:mm:ss");
            String d1 = format1.format(now);
            String t1 = format2.format(now);
            System.out.println(d1 + " " + t1);
         
            String Sql = "";
  
            Sql = "insert into journal (DateOfWork, TimeOfWork, IdHS, Enter, Quit, InputDataInTable, UseQuery) values (?, ?, ?, ?, ?, ?, ?)";
          
            try {
            PreparedStatement ps = cn.prepareStatement(Sql);
            ps.setString(1, d1);
            ps.setString(2, t1);
            ps.setInt(3, idhs);
            ps.setString(4, "1");
            ps.setString(5, "0");
            ps.setString(6, "");
            ps.setString(7, "");
            
            int n = ps.executeUpdate();
            
            if(n <= 0)
            {
            JOptionPane.showMessageDialog(null, "message_journal_BAD_Enter");
            }
            }
            catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
            
            }
            catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
                if (idpost == 2)
              {
                new DoctorMain().setVisible(true);
              }
                else if (idpost == 3)
              {
                new OperatorMain().setVisible(true);
              }
                else
              {
                new AdminMain().setVisible(true);
              }
            
                this.dispose();
            }
            else 
            {
                JOptionPane.showMessageDialog(null, "Неверная комбинация логин - пароль.");
            }
            } else {
            JOptionPane.showMessageDialog(null, "Неверный логин");
            }
            }
            }
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ошибка подключения к базе данных: неверный пароль1");
            }
        }
    }//GEN-LAST:event_ButtonEnterKeyPressed

    private void ButtonEnterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ButtonEnterKeyTyped
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
                    String log, pas;
            log = FieldLogin.getText();
            pas = FieldPassword.getText();
             try
            {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/patients2", "root", FieldDBPass.getText());
            Statement sta = cn.createStatement();
            ResultSet rs;

            rs = sta.executeQuery("select IdHS, Login, Pass, IdPost from hospitalstaff where Login ='" + log + "';");

            if(!rs.first())
            JOptionPane.showMessageDialog(null, "Неверный логин");
            else {
            if (log.equals(rs.getString("Login"))) {
            if (pas.equals(rs.getString("Pass"))) {
            idhs = rs.getInt("IdHS");
            idpost = rs.getInt("IdPost");
            try {                                               
            Statement s = cn.createStatement();
            Date now = new Date();
            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat format2 = new SimpleDateFormat("HH:mm:ss");
            String d1 = format1.format(now);
            String t1 = format2.format(now);
            System.out.println(d1 + " " + t1);
         
            String Sql = "";
  
            Sql = "insert into journal (DateOfWork, TimeOfWork, IdHS, Enter, Quit, InputDataInTable, UseQuery) values (?, ?, ?, ?, ?, ?, ?)";
          
            try {
            PreparedStatement ps = cn.prepareStatement(Sql);
            ps.setString(1, d1);
            ps.setString(2, t1);
            ps.setInt(3, idhs);
            ps.setString(4, "1");
            ps.setString(5, "0");
            ps.setString(6, "");
            ps.setString(7, "");
            
            int n = ps.executeUpdate();
            
            if(n <= 0)
            {
            JOptionPane.showMessageDialog(null, "message_journal_BAD_Enter");
            }
            }
            catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
            
            }
            catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
                if (idpost == 2)
              {
                new DoctorMain().setVisible(true);
              }
                else if (idpost == 3)
              {
                new OperatorMain().setVisible(true);
              }
                else
              {
                new AdminMain().setVisible(true);
              }
            
                this.dispose();
            }
            else 
            {
                JOptionPane.showMessageDialog(null, "Неверная комбинация логин - пароль.");
            }
            } else {
            JOptionPane.showMessageDialog(null, "Неверный логин");
            }
            }
            }
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ошибка подключения к базе данных: неверный пароль1");
            }
        }
    }//GEN-LAST:event_ButtonEnterKeyTyped

    private void FieldPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FieldPasswordKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
                    String log, pas;
            log = FieldLogin.getText();
            pas = FieldPassword.getText();
             try
            {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/patients2", "root", FieldDBPass.getText());
            Statement sta = cn.createStatement();
            ResultSet rs;

            rs = sta.executeQuery("select IdHS, Login, Pass, IdPost from hospitalstaff where Login ='" + log + "';");

            if(!rs.first())
            JOptionPane.showMessageDialog(null, "Неверный логин");
            else {
            if (log.equals(rs.getString("Login"))) {
            if (pas.equals(rs.getString("Pass"))) {
            idhs = rs.getInt("IdHS");
            idpost = rs.getInt("IdPost");

            try {                                               
            Statement s = cn.createStatement();
            Date now = new Date();
            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat format2 = new SimpleDateFormat("HH:mm:ss");
            String d1 = format1.format(now);
            String t1 = format2.format(now);
            System.out.println(d1 + " " + t1);
         
            String Sql = "";
  
            Sql = "insert into journal (DateOfWork, TimeOfWork, IdHS, Enter, Quit, InputDataInTable, UseQuery) values (?, ?, ?, ?, ?, ?, ?)";
          
            try {
            PreparedStatement ps = cn.prepareStatement(Sql);
            ps.setString(1, d1);
            ps.setString(2, t1);
            ps.setInt(3, idhs);
            ps.setString(4, "1");
            ps.setString(5, "0");
            ps.setString(6, "");
            ps.setString(7, "");
            
            int n = ps.executeUpdate();
            
            if(n <= 0)
            {
            JOptionPane.showMessageDialog(null, "message_journal_BAD_Enter");
            }
            }
            catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
            
            }
            catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            }

                if (idpost == 2)
              {
                new DoctorMain().setVisible(true);
              }
                else if (idpost == 3)
              {
                new OperatorMain().setVisible(true);
              }
                else
              {
                new AdminMain().setVisible(true);
              }
            
                this.dispose();
            }
            else 
            {
                JOptionPane.showMessageDialog(null, "Неверная комбинация логин - пароль.");
            }
            } else {
            JOptionPane.showMessageDialog(null, "Неверный логин");
            }
            }
            }
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ошибка подключения к базе данных: неверный пароль1");
            //Logger.getLogger(MedLogin.class.getName()).log(Level.SEVERE, null, "Ошибка подключения " + ex);
            }
        }
    }//GEN-LAST:event_FieldPasswordKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonEnter;
    private javax.swing.JPasswordField FieldDBPass;
    private javax.swing.JTextField FieldLogin;
    private javax.swing.JPasswordField FieldPassword;
    private javax.swing.JLabel LabelDBPassword;
    private javax.swing.JLabel LabelLogin;
    private javax.swing.JLabel LabelPassword;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
